
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model tbl_animais
 * 
 */
export type tbl_animais = $Result.DefaultSelection<Prisma.$tbl_animaisPayload>
/**
 * Model tbl_cadastro
 * 
 */
export type tbl_cadastro = $Result.DefaultSelection<Prisma.$tbl_cadastroPayload>
/**
 * Model tbl_formulario_adocao
 * 
 */
export type tbl_formulario_adocao = $Result.DefaultSelection<Prisma.$tbl_formulario_adocaoPayload>

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Tbl_animais
 * const tbl_animais = await prisma.tbl_animais.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  T extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof T ? T['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<T['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Tbl_animais
   * const tbl_animais = await prisma.tbl_animais.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<T, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<'extends', Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.tbl_animais`: Exposes CRUD operations for the **tbl_animais** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_animais
    * const tbl_animais = await prisma.tbl_animais.findMany()
    * ```
    */
  get tbl_animais(): Prisma.tbl_animaisDelegate<ExtArgs>;

  /**
   * `prisma.tbl_cadastro`: Exposes CRUD operations for the **tbl_cadastro** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_cadastros
    * const tbl_cadastros = await prisma.tbl_cadastro.findMany()
    * ```
    */
  get tbl_cadastro(): Prisma.tbl_cadastroDelegate<ExtArgs>;

  /**
   * `prisma.tbl_formulario_adocao`: Exposes CRUD operations for the **tbl_formulario_adocao** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_formulario_adocaos
    * const tbl_formulario_adocaos = await prisma.tbl_formulario_adocao.findMany()
    * ```
    */
  get tbl_formulario_adocao(): Prisma.tbl_formulario_adocaoDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql

  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.14.0
   * Query Engine version: e9771e62de70f79a5e1c604a2d7c8e2a0a874b48
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON object.
   * This type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from. 
   */
  export type JsonObject = {[Key in string]?: JsonValue}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON array.
   */
  export interface JsonArray extends Array<JsonValue> {}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches any valid JSON value.
   */
  export type JsonValue = string | number | boolean | JsonObject | JsonArray | null

  /**
   * Matches a JSON object.
   * Unlike `JsonObject`, this type allows undefined and read-only properties.
   */
  export type InputJsonObject = {readonly [Key in string]?: InputJsonValue | null}

  /**
   * Matches a JSON array.
   * Unlike `JsonArray`, readonly arrays are assignable to this type.
   */
  export interface InputJsonArray extends ReadonlyArray<InputJsonValue | null> {}

  /**
   * Matches any valid value that can be used as an input for operations like
   * create and update as the value of a JSON field. Unlike `JsonValue`, this
   * type allows read-only arrays and read-only object properties and disallows
   * `null` at the top level.
   *
   * `null` cannot be used as the value of a JSON field because its meaning
   * would be ambiguous. Use `Prisma.JsonNull` to store the JSON null value or
   * `Prisma.DbNull` to clear the JSON value and set the field to the database
   * NULL value instead.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-by-null-values
   */
  export type InputJsonValue = string | number | boolean | InputJsonObject | InputJsonArray | { toJSON(): unknown }

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    tbl_animais: 'tbl_animais',
    tbl_cadastro: 'tbl_cadastro',
    tbl_formulario_adocao: 'tbl_formulario_adocao'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }


  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs}, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    meta: {
      modelProps: 'tbl_animais' | 'tbl_cadastro' | 'tbl_formulario_adocao'
      txIsolationLevel: Prisma.TransactionIsolationLevel
    },
    model: {
      tbl_animais: {
        payload: Prisma.$tbl_animaisPayload<ExtArgs>
        fields: Prisma.tbl_animaisFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_animaisFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_animaisPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_animaisFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_animaisPayload>
          }
          findFirst: {
            args: Prisma.tbl_animaisFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_animaisPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_animaisFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_animaisPayload>
          }
          findMany: {
            args: Prisma.tbl_animaisFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_animaisPayload>[]
          }
          create: {
            args: Prisma.tbl_animaisCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_animaisPayload>
          }
          createMany: {
            args: Prisma.tbl_animaisCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.tbl_animaisDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_animaisPayload>
          }
          update: {
            args: Prisma.tbl_animaisUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_animaisPayload>
          }
          deleteMany: {
            args: Prisma.tbl_animaisDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_animaisUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.tbl_animaisUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_animaisPayload>
          }
          aggregate: {
            args: Prisma.Tbl_animaisAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTbl_animais>
          }
          groupBy: {
            args: Prisma.tbl_animaisGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Tbl_animaisGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_animaisCountArgs<ExtArgs>,
            result: $Utils.Optional<Tbl_animaisCountAggregateOutputType> | number
          }
        }
      }
      tbl_cadastro: {
        payload: Prisma.$tbl_cadastroPayload<ExtArgs>
        fields: Prisma.tbl_cadastroFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_cadastroFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_cadastroPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_cadastroFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_cadastroPayload>
          }
          findFirst: {
            args: Prisma.tbl_cadastroFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_cadastroPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_cadastroFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_cadastroPayload>
          }
          findMany: {
            args: Prisma.tbl_cadastroFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_cadastroPayload>[]
          }
          create: {
            args: Prisma.tbl_cadastroCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_cadastroPayload>
          }
          createMany: {
            args: Prisma.tbl_cadastroCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.tbl_cadastroDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_cadastroPayload>
          }
          update: {
            args: Prisma.tbl_cadastroUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_cadastroPayload>
          }
          deleteMany: {
            args: Prisma.tbl_cadastroDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_cadastroUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.tbl_cadastroUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_cadastroPayload>
          }
          aggregate: {
            args: Prisma.Tbl_cadastroAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTbl_cadastro>
          }
          groupBy: {
            args: Prisma.tbl_cadastroGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Tbl_cadastroGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_cadastroCountArgs<ExtArgs>,
            result: $Utils.Optional<Tbl_cadastroCountAggregateOutputType> | number
          }
        }
      }
      tbl_formulario_adocao: {
        payload: Prisma.$tbl_formulario_adocaoPayload<ExtArgs>
        fields: Prisma.tbl_formulario_adocaoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_formulario_adocaoFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_formulario_adocaoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_formulario_adocaoFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_formulario_adocaoPayload>
          }
          findFirst: {
            args: Prisma.tbl_formulario_adocaoFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_formulario_adocaoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_formulario_adocaoFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_formulario_adocaoPayload>
          }
          findMany: {
            args: Prisma.tbl_formulario_adocaoFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_formulario_adocaoPayload>[]
          }
          create: {
            args: Prisma.tbl_formulario_adocaoCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_formulario_adocaoPayload>
          }
          createMany: {
            args: Prisma.tbl_formulario_adocaoCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.tbl_formulario_adocaoDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_formulario_adocaoPayload>
          }
          update: {
            args: Prisma.tbl_formulario_adocaoUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_formulario_adocaoPayload>
          }
          deleteMany: {
            args: Prisma.tbl_formulario_adocaoDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_formulario_adocaoUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.tbl_formulario_adocaoUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tbl_formulario_adocaoPayload>
          }
          aggregate: {
            args: Prisma.Tbl_formulario_adocaoAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTbl_formulario_adocao>
          }
          groupBy: {
            args: Prisma.tbl_formulario_adocaoGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Tbl_formulario_adocaoGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_formulario_adocaoCountArgs<ExtArgs>,
            result: $Utils.Optional<Tbl_formulario_adocaoCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<'define', Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */



  /**
   * Models
   */

  /**
   * Model tbl_animais
   */

  export type AggregateTbl_animais = {
    _count: Tbl_animaisCountAggregateOutputType | null
    _avg: Tbl_animaisAvgAggregateOutputType | null
    _sum: Tbl_animaisSumAggregateOutputType | null
    _min: Tbl_animaisMinAggregateOutputType | null
    _max: Tbl_animaisMaxAggregateOutputType | null
  }

  export type Tbl_animaisAvgAggregateOutputType = {
    id: number | null
    idade: number | null
  }

  export type Tbl_animaisSumAggregateOutputType = {
    id: number | null
    idade: number | null
  }

  export type Tbl_animaisMinAggregateOutputType = {
    id: number | null
    nome: string | null
    raca: string | null
    idade: number | null
    setor: string | null
  }

  export type Tbl_animaisMaxAggregateOutputType = {
    id: number | null
    nome: string | null
    raca: string | null
    idade: number | null
    setor: string | null
  }

  export type Tbl_animaisCountAggregateOutputType = {
    id: number
    nome: number
    raca: number
    idade: number
    setor: number
    _all: number
  }


  export type Tbl_animaisAvgAggregateInputType = {
    id?: true
    idade?: true
  }

  export type Tbl_animaisSumAggregateInputType = {
    id?: true
    idade?: true
  }

  export type Tbl_animaisMinAggregateInputType = {
    id?: true
    nome?: true
    raca?: true
    idade?: true
    setor?: true
  }

  export type Tbl_animaisMaxAggregateInputType = {
    id?: true
    nome?: true
    raca?: true
    idade?: true
    setor?: true
  }

  export type Tbl_animaisCountAggregateInputType = {
    id?: true
    nome?: true
    raca?: true
    idade?: true
    setor?: true
    _all?: true
  }

  export type Tbl_animaisAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_animais to aggregate.
     */
    where?: tbl_animaisWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_animais to fetch.
     */
    orderBy?: tbl_animaisOrderByWithRelationInput | tbl_animaisOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_animaisWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_animais from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_animais.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_animais
    **/
    _count?: true | Tbl_animaisCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_animaisAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_animaisSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_animaisMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_animaisMaxAggregateInputType
  }

  export type GetTbl_animaisAggregateType<T extends Tbl_animaisAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_animais]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_animais[P]>
      : GetScalarType<T[P], AggregateTbl_animais[P]>
  }




  export type tbl_animaisGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_animaisWhereInput
    orderBy?: tbl_animaisOrderByWithAggregationInput | tbl_animaisOrderByWithAggregationInput[]
    by: Tbl_animaisScalarFieldEnum[] | Tbl_animaisScalarFieldEnum
    having?: tbl_animaisScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_animaisCountAggregateInputType | true
    _avg?: Tbl_animaisAvgAggregateInputType
    _sum?: Tbl_animaisSumAggregateInputType
    _min?: Tbl_animaisMinAggregateInputType
    _max?: Tbl_animaisMaxAggregateInputType
  }

  export type Tbl_animaisGroupByOutputType = {
    id: number
    nome: string | null
    raca: string
    idade: number | null
    setor: string
    _count: Tbl_animaisCountAggregateOutputType | null
    _avg: Tbl_animaisAvgAggregateOutputType | null
    _sum: Tbl_animaisSumAggregateOutputType | null
    _min: Tbl_animaisMinAggregateOutputType | null
    _max: Tbl_animaisMaxAggregateOutputType | null
  }

  type GetTbl_animaisGroupByPayload<T extends tbl_animaisGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_animaisGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_animaisGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_animaisGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_animaisGroupByOutputType[P]>
        }
      >
    >


  export type tbl_animaisSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    raca?: boolean
    idade?: boolean
    setor?: boolean
  }, ExtArgs["result"]["tbl_animais"]>

  export type tbl_animaisSelectScalar = {
    id?: boolean
    nome?: boolean
    raca?: boolean
    idade?: boolean
    setor?: boolean
  }



  export type $tbl_animaisPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_animais"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string | null
      raca: string
      idade: number | null
      setor: string
    }, ExtArgs["result"]["tbl_animais"]>
    composites: {}
  }


  type tbl_animaisGetPayload<S extends boolean | null | undefined | tbl_animaisDefaultArgs> = $Result.GetResult<Prisma.$tbl_animaisPayload, S>

  type tbl_animaisCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<tbl_animaisFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Tbl_animaisCountAggregateInputType | true
    }

  export interface tbl_animaisDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_animais'], meta: { name: 'tbl_animais' } }
    /**
     * Find zero or one Tbl_animais that matches the filter.
     * @param {tbl_animaisFindUniqueArgs} args - Arguments to find a Tbl_animais
     * @example
     * // Get one Tbl_animais
     * const tbl_animais = await prisma.tbl_animais.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends tbl_animaisFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_animaisFindUniqueArgs<ExtArgs>>
    ): Prisma__tbl_animaisClient<$Result.GetResult<Prisma.$tbl_animaisPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Tbl_animais that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {tbl_animaisFindUniqueOrThrowArgs} args - Arguments to find a Tbl_animais
     * @example
     * // Get one Tbl_animais
     * const tbl_animais = await prisma.tbl_animais.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends tbl_animaisFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_animaisFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__tbl_animaisClient<$Result.GetResult<Prisma.$tbl_animaisPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Tbl_animais that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_animaisFindFirstArgs} args - Arguments to find a Tbl_animais
     * @example
     * // Get one Tbl_animais
     * const tbl_animais = await prisma.tbl_animais.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends tbl_animaisFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_animaisFindFirstArgs<ExtArgs>>
    ): Prisma__tbl_animaisClient<$Result.GetResult<Prisma.$tbl_animaisPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Tbl_animais that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_animaisFindFirstOrThrowArgs} args - Arguments to find a Tbl_animais
     * @example
     * // Get one Tbl_animais
     * const tbl_animais = await prisma.tbl_animais.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends tbl_animaisFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_animaisFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__tbl_animaisClient<$Result.GetResult<Prisma.$tbl_animaisPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Tbl_animais that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_animaisFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_animais
     * const tbl_animais = await prisma.tbl_animais.findMany()
     * 
     * // Get first 10 Tbl_animais
     * const tbl_animais = await prisma.tbl_animais.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbl_animaisWithIdOnly = await prisma.tbl_animais.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends tbl_animaisFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_animaisFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_animaisPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Tbl_animais.
     * @param {tbl_animaisCreateArgs} args - Arguments to create a Tbl_animais.
     * @example
     * // Create one Tbl_animais
     * const Tbl_animais = await prisma.tbl_animais.create({
     *   data: {
     *     // ... data to create a Tbl_animais
     *   }
     * })
     * 
    **/
    create<T extends tbl_animaisCreateArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_animaisCreateArgs<ExtArgs>>
    ): Prisma__tbl_animaisClient<$Result.GetResult<Prisma.$tbl_animaisPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Tbl_animais.
     * @param {tbl_animaisCreateManyArgs} args - Arguments to create many Tbl_animais.
     * @example
     * // Create many Tbl_animais
     * const tbl_animais = await prisma.tbl_animais.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends tbl_animaisCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_animaisCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbl_animais.
     * @param {tbl_animaisDeleteArgs} args - Arguments to delete one Tbl_animais.
     * @example
     * // Delete one Tbl_animais
     * const Tbl_animais = await prisma.tbl_animais.delete({
     *   where: {
     *     // ... filter to delete one Tbl_animais
     *   }
     * })
     * 
    **/
    delete<T extends tbl_animaisDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_animaisDeleteArgs<ExtArgs>>
    ): Prisma__tbl_animaisClient<$Result.GetResult<Prisma.$tbl_animaisPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Tbl_animais.
     * @param {tbl_animaisUpdateArgs} args - Arguments to update one Tbl_animais.
     * @example
     * // Update one Tbl_animais
     * const tbl_animais = await prisma.tbl_animais.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends tbl_animaisUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_animaisUpdateArgs<ExtArgs>>
    ): Prisma__tbl_animaisClient<$Result.GetResult<Prisma.$tbl_animaisPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Tbl_animais.
     * @param {tbl_animaisDeleteManyArgs} args - Arguments to filter Tbl_animais to delete.
     * @example
     * // Delete a few Tbl_animais
     * const { count } = await prisma.tbl_animais.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends tbl_animaisDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_animaisDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_animais.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_animaisUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_animais
     * const tbl_animais = await prisma.tbl_animais.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends tbl_animaisUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_animaisUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_animais.
     * @param {tbl_animaisUpsertArgs} args - Arguments to update or create a Tbl_animais.
     * @example
     * // Update or create a Tbl_animais
     * const tbl_animais = await prisma.tbl_animais.upsert({
     *   create: {
     *     // ... data to create a Tbl_animais
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_animais we want to update
     *   }
     * })
    **/
    upsert<T extends tbl_animaisUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_animaisUpsertArgs<ExtArgs>>
    ): Prisma__tbl_animaisClient<$Result.GetResult<Prisma.$tbl_animaisPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Tbl_animais.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_animaisCountArgs} args - Arguments to filter Tbl_animais to count.
     * @example
     * // Count the number of Tbl_animais
     * const count = await prisma.tbl_animais.count({
     *   where: {
     *     // ... the filter for the Tbl_animais we want to count
     *   }
     * })
    **/
    count<T extends tbl_animaisCountArgs>(
      args?: Subset<T, tbl_animaisCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_animaisCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_animais.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_animaisAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_animaisAggregateArgs>(args: Subset<T, Tbl_animaisAggregateArgs>): Prisma.PrismaPromise<GetTbl_animaisAggregateType<T>>

    /**
     * Group by Tbl_animais.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_animaisGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_animaisGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_animaisGroupByArgs['orderBy'] }
        : { orderBy?: tbl_animaisGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_animaisGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_animaisGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_animais model
   */
  readonly fields: tbl_animaisFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_animais.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_animaisClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';


    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the tbl_animais model
   */ 
  interface tbl_animaisFieldRefs {
    readonly id: FieldRef<"tbl_animais", 'Int'>
    readonly nome: FieldRef<"tbl_animais", 'String'>
    readonly raca: FieldRef<"tbl_animais", 'String'>
    readonly idade: FieldRef<"tbl_animais", 'Int'>
    readonly setor: FieldRef<"tbl_animais", 'String'>
  }
    

  // Custom InputTypes
  /**
   * tbl_animais findUnique
   */
  export type tbl_animaisFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_animais
     */
    select?: tbl_animaisSelect<ExtArgs> | null
    /**
     * Filter, which tbl_animais to fetch.
     */
    where: tbl_animaisWhereUniqueInput
  }

  /**
   * tbl_animais findUniqueOrThrow
   */
  export type tbl_animaisFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_animais
     */
    select?: tbl_animaisSelect<ExtArgs> | null
    /**
     * Filter, which tbl_animais to fetch.
     */
    where: tbl_animaisWhereUniqueInput
  }

  /**
   * tbl_animais findFirst
   */
  export type tbl_animaisFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_animais
     */
    select?: tbl_animaisSelect<ExtArgs> | null
    /**
     * Filter, which tbl_animais to fetch.
     */
    where?: tbl_animaisWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_animais to fetch.
     */
    orderBy?: tbl_animaisOrderByWithRelationInput | tbl_animaisOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_animais.
     */
    cursor?: tbl_animaisWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_animais from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_animais.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_animais.
     */
    distinct?: Tbl_animaisScalarFieldEnum | Tbl_animaisScalarFieldEnum[]
  }

  /**
   * tbl_animais findFirstOrThrow
   */
  export type tbl_animaisFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_animais
     */
    select?: tbl_animaisSelect<ExtArgs> | null
    /**
     * Filter, which tbl_animais to fetch.
     */
    where?: tbl_animaisWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_animais to fetch.
     */
    orderBy?: tbl_animaisOrderByWithRelationInput | tbl_animaisOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_animais.
     */
    cursor?: tbl_animaisWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_animais from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_animais.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_animais.
     */
    distinct?: Tbl_animaisScalarFieldEnum | Tbl_animaisScalarFieldEnum[]
  }

  /**
   * tbl_animais findMany
   */
  export type tbl_animaisFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_animais
     */
    select?: tbl_animaisSelect<ExtArgs> | null
    /**
     * Filter, which tbl_animais to fetch.
     */
    where?: tbl_animaisWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_animais to fetch.
     */
    orderBy?: tbl_animaisOrderByWithRelationInput | tbl_animaisOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_animais.
     */
    cursor?: tbl_animaisWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_animais from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_animais.
     */
    skip?: number
    distinct?: Tbl_animaisScalarFieldEnum | Tbl_animaisScalarFieldEnum[]
  }

  /**
   * tbl_animais create
   */
  export type tbl_animaisCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_animais
     */
    select?: tbl_animaisSelect<ExtArgs> | null
    /**
     * The data needed to create a tbl_animais.
     */
    data: XOR<tbl_animaisCreateInput, tbl_animaisUncheckedCreateInput>
  }

  /**
   * tbl_animais createMany
   */
  export type tbl_animaisCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_animais.
     */
    data: tbl_animaisCreateManyInput | tbl_animaisCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tbl_animais update
   */
  export type tbl_animaisUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_animais
     */
    select?: tbl_animaisSelect<ExtArgs> | null
    /**
     * The data needed to update a tbl_animais.
     */
    data: XOR<tbl_animaisUpdateInput, tbl_animaisUncheckedUpdateInput>
    /**
     * Choose, which tbl_animais to update.
     */
    where: tbl_animaisWhereUniqueInput
  }

  /**
   * tbl_animais updateMany
   */
  export type tbl_animaisUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_animais.
     */
    data: XOR<tbl_animaisUpdateManyMutationInput, tbl_animaisUncheckedUpdateManyInput>
    /**
     * Filter which tbl_animais to update
     */
    where?: tbl_animaisWhereInput
  }

  /**
   * tbl_animais upsert
   */
  export type tbl_animaisUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_animais
     */
    select?: tbl_animaisSelect<ExtArgs> | null
    /**
     * The filter to search for the tbl_animais to update in case it exists.
     */
    where: tbl_animaisWhereUniqueInput
    /**
     * In case the tbl_animais found by the `where` argument doesn't exist, create a new tbl_animais with this data.
     */
    create: XOR<tbl_animaisCreateInput, tbl_animaisUncheckedCreateInput>
    /**
     * In case the tbl_animais was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_animaisUpdateInput, tbl_animaisUncheckedUpdateInput>
  }

  /**
   * tbl_animais delete
   */
  export type tbl_animaisDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_animais
     */
    select?: tbl_animaisSelect<ExtArgs> | null
    /**
     * Filter which tbl_animais to delete.
     */
    where: tbl_animaisWhereUniqueInput
  }

  /**
   * tbl_animais deleteMany
   */
  export type tbl_animaisDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_animais to delete
     */
    where?: tbl_animaisWhereInput
  }

  /**
   * tbl_animais without action
   */
  export type tbl_animaisDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_animais
     */
    select?: tbl_animaisSelect<ExtArgs> | null
  }


  /**
   * Model tbl_cadastro
   */

  export type AggregateTbl_cadastro = {
    _count: Tbl_cadastroCountAggregateOutputType | null
    _avg: Tbl_cadastroAvgAggregateOutputType | null
    _sum: Tbl_cadastroSumAggregateOutputType | null
    _min: Tbl_cadastroMinAggregateOutputType | null
    _max: Tbl_cadastroMaxAggregateOutputType | null
  }

  export type Tbl_cadastroAvgAggregateOutputType = {
    id: number | null
    telefone: number | null
    cpf: number | null
    rg: number | null
  }

  export type Tbl_cadastroSumAggregateOutputType = {
    id: number | null
    telefone: bigint | null
    cpf: bigint | null
    rg: bigint | null
  }

  export type Tbl_cadastroMinAggregateOutputType = {
    id: number | null
    nome: string | null
    email: string | null
    endereco: string | null
    telefone: bigint | null
    cpf: bigint | null
    rg: bigint | null
  }

  export type Tbl_cadastroMaxAggregateOutputType = {
    id: number | null
    nome: string | null
    email: string | null
    endereco: string | null
    telefone: bigint | null
    cpf: bigint | null
    rg: bigint | null
  }

  export type Tbl_cadastroCountAggregateOutputType = {
    id: number
    nome: number
    email: number
    endereco: number
    telefone: number
    cpf: number
    rg: number
    _all: number
  }


  export type Tbl_cadastroAvgAggregateInputType = {
    id?: true
    telefone?: true
    cpf?: true
    rg?: true
  }

  export type Tbl_cadastroSumAggregateInputType = {
    id?: true
    telefone?: true
    cpf?: true
    rg?: true
  }

  export type Tbl_cadastroMinAggregateInputType = {
    id?: true
    nome?: true
    email?: true
    endereco?: true
    telefone?: true
    cpf?: true
    rg?: true
  }

  export type Tbl_cadastroMaxAggregateInputType = {
    id?: true
    nome?: true
    email?: true
    endereco?: true
    telefone?: true
    cpf?: true
    rg?: true
  }

  export type Tbl_cadastroCountAggregateInputType = {
    id?: true
    nome?: true
    email?: true
    endereco?: true
    telefone?: true
    cpf?: true
    rg?: true
    _all?: true
  }

  export type Tbl_cadastroAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_cadastro to aggregate.
     */
    where?: tbl_cadastroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_cadastros to fetch.
     */
    orderBy?: tbl_cadastroOrderByWithRelationInput | tbl_cadastroOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_cadastroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_cadastros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_cadastros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_cadastros
    **/
    _count?: true | Tbl_cadastroCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_cadastroAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_cadastroSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_cadastroMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_cadastroMaxAggregateInputType
  }

  export type GetTbl_cadastroAggregateType<T extends Tbl_cadastroAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_cadastro]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_cadastro[P]>
      : GetScalarType<T[P], AggregateTbl_cadastro[P]>
  }




  export type tbl_cadastroGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_cadastroWhereInput
    orderBy?: tbl_cadastroOrderByWithAggregationInput | tbl_cadastroOrderByWithAggregationInput[]
    by: Tbl_cadastroScalarFieldEnum[] | Tbl_cadastroScalarFieldEnum
    having?: tbl_cadastroScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_cadastroCountAggregateInputType | true
    _avg?: Tbl_cadastroAvgAggregateInputType
    _sum?: Tbl_cadastroSumAggregateInputType
    _min?: Tbl_cadastroMinAggregateInputType
    _max?: Tbl_cadastroMaxAggregateInputType
  }

  export type Tbl_cadastroGroupByOutputType = {
    id: number
    nome: string
    email: string | null
    endereco: string
    telefone: bigint
    cpf: bigint
    rg: bigint
    _count: Tbl_cadastroCountAggregateOutputType | null
    _avg: Tbl_cadastroAvgAggregateOutputType | null
    _sum: Tbl_cadastroSumAggregateOutputType | null
    _min: Tbl_cadastroMinAggregateOutputType | null
    _max: Tbl_cadastroMaxAggregateOutputType | null
  }

  type GetTbl_cadastroGroupByPayload<T extends tbl_cadastroGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_cadastroGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_cadastroGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_cadastroGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_cadastroGroupByOutputType[P]>
        }
      >
    >


  export type tbl_cadastroSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    email?: boolean
    endereco?: boolean
    telefone?: boolean
    cpf?: boolean
    rg?: boolean
  }, ExtArgs["result"]["tbl_cadastro"]>

  export type tbl_cadastroSelectScalar = {
    id?: boolean
    nome?: boolean
    email?: boolean
    endereco?: boolean
    telefone?: boolean
    cpf?: boolean
    rg?: boolean
  }



  export type $tbl_cadastroPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_cadastro"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string
      email: string | null
      endereco: string
      telefone: bigint
      cpf: bigint
      rg: bigint
    }, ExtArgs["result"]["tbl_cadastro"]>
    composites: {}
  }


  type tbl_cadastroGetPayload<S extends boolean | null | undefined | tbl_cadastroDefaultArgs> = $Result.GetResult<Prisma.$tbl_cadastroPayload, S>

  type tbl_cadastroCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<tbl_cadastroFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Tbl_cadastroCountAggregateInputType | true
    }

  export interface tbl_cadastroDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_cadastro'], meta: { name: 'tbl_cadastro' } }
    /**
     * Find zero or one Tbl_cadastro that matches the filter.
     * @param {tbl_cadastroFindUniqueArgs} args - Arguments to find a Tbl_cadastro
     * @example
     * // Get one Tbl_cadastro
     * const tbl_cadastro = await prisma.tbl_cadastro.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends tbl_cadastroFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_cadastroFindUniqueArgs<ExtArgs>>
    ): Prisma__tbl_cadastroClient<$Result.GetResult<Prisma.$tbl_cadastroPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Tbl_cadastro that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {tbl_cadastroFindUniqueOrThrowArgs} args - Arguments to find a Tbl_cadastro
     * @example
     * // Get one Tbl_cadastro
     * const tbl_cadastro = await prisma.tbl_cadastro.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends tbl_cadastroFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_cadastroFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__tbl_cadastroClient<$Result.GetResult<Prisma.$tbl_cadastroPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Tbl_cadastro that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_cadastroFindFirstArgs} args - Arguments to find a Tbl_cadastro
     * @example
     * // Get one Tbl_cadastro
     * const tbl_cadastro = await prisma.tbl_cadastro.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends tbl_cadastroFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_cadastroFindFirstArgs<ExtArgs>>
    ): Prisma__tbl_cadastroClient<$Result.GetResult<Prisma.$tbl_cadastroPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Tbl_cadastro that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_cadastroFindFirstOrThrowArgs} args - Arguments to find a Tbl_cadastro
     * @example
     * // Get one Tbl_cadastro
     * const tbl_cadastro = await prisma.tbl_cadastro.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends tbl_cadastroFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_cadastroFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__tbl_cadastroClient<$Result.GetResult<Prisma.$tbl_cadastroPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Tbl_cadastros that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_cadastroFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_cadastros
     * const tbl_cadastros = await prisma.tbl_cadastro.findMany()
     * 
     * // Get first 10 Tbl_cadastros
     * const tbl_cadastros = await prisma.tbl_cadastro.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbl_cadastroWithIdOnly = await prisma.tbl_cadastro.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends tbl_cadastroFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_cadastroFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_cadastroPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Tbl_cadastro.
     * @param {tbl_cadastroCreateArgs} args - Arguments to create a Tbl_cadastro.
     * @example
     * // Create one Tbl_cadastro
     * const Tbl_cadastro = await prisma.tbl_cadastro.create({
     *   data: {
     *     // ... data to create a Tbl_cadastro
     *   }
     * })
     * 
    **/
    create<T extends tbl_cadastroCreateArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_cadastroCreateArgs<ExtArgs>>
    ): Prisma__tbl_cadastroClient<$Result.GetResult<Prisma.$tbl_cadastroPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Tbl_cadastros.
     * @param {tbl_cadastroCreateManyArgs} args - Arguments to create many Tbl_cadastros.
     * @example
     * // Create many Tbl_cadastros
     * const tbl_cadastro = await prisma.tbl_cadastro.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends tbl_cadastroCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_cadastroCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbl_cadastro.
     * @param {tbl_cadastroDeleteArgs} args - Arguments to delete one Tbl_cadastro.
     * @example
     * // Delete one Tbl_cadastro
     * const Tbl_cadastro = await prisma.tbl_cadastro.delete({
     *   where: {
     *     // ... filter to delete one Tbl_cadastro
     *   }
     * })
     * 
    **/
    delete<T extends tbl_cadastroDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_cadastroDeleteArgs<ExtArgs>>
    ): Prisma__tbl_cadastroClient<$Result.GetResult<Prisma.$tbl_cadastroPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Tbl_cadastro.
     * @param {tbl_cadastroUpdateArgs} args - Arguments to update one Tbl_cadastro.
     * @example
     * // Update one Tbl_cadastro
     * const tbl_cadastro = await prisma.tbl_cadastro.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends tbl_cadastroUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_cadastroUpdateArgs<ExtArgs>>
    ): Prisma__tbl_cadastroClient<$Result.GetResult<Prisma.$tbl_cadastroPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Tbl_cadastros.
     * @param {tbl_cadastroDeleteManyArgs} args - Arguments to filter Tbl_cadastros to delete.
     * @example
     * // Delete a few Tbl_cadastros
     * const { count } = await prisma.tbl_cadastro.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends tbl_cadastroDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_cadastroDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_cadastros.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_cadastroUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_cadastros
     * const tbl_cadastro = await prisma.tbl_cadastro.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends tbl_cadastroUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_cadastroUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_cadastro.
     * @param {tbl_cadastroUpsertArgs} args - Arguments to update or create a Tbl_cadastro.
     * @example
     * // Update or create a Tbl_cadastro
     * const tbl_cadastro = await prisma.tbl_cadastro.upsert({
     *   create: {
     *     // ... data to create a Tbl_cadastro
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_cadastro we want to update
     *   }
     * })
    **/
    upsert<T extends tbl_cadastroUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_cadastroUpsertArgs<ExtArgs>>
    ): Prisma__tbl_cadastroClient<$Result.GetResult<Prisma.$tbl_cadastroPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Tbl_cadastros.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_cadastroCountArgs} args - Arguments to filter Tbl_cadastros to count.
     * @example
     * // Count the number of Tbl_cadastros
     * const count = await prisma.tbl_cadastro.count({
     *   where: {
     *     // ... the filter for the Tbl_cadastros we want to count
     *   }
     * })
    **/
    count<T extends tbl_cadastroCountArgs>(
      args?: Subset<T, tbl_cadastroCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_cadastroCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_cadastro.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_cadastroAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_cadastroAggregateArgs>(args: Subset<T, Tbl_cadastroAggregateArgs>): Prisma.PrismaPromise<GetTbl_cadastroAggregateType<T>>

    /**
     * Group by Tbl_cadastro.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_cadastroGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_cadastroGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_cadastroGroupByArgs['orderBy'] }
        : { orderBy?: tbl_cadastroGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_cadastroGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_cadastroGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_cadastro model
   */
  readonly fields: tbl_cadastroFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_cadastro.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_cadastroClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';


    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the tbl_cadastro model
   */ 
  interface tbl_cadastroFieldRefs {
    readonly id: FieldRef<"tbl_cadastro", 'Int'>
    readonly nome: FieldRef<"tbl_cadastro", 'String'>
    readonly email: FieldRef<"tbl_cadastro", 'String'>
    readonly endereco: FieldRef<"tbl_cadastro", 'String'>
    readonly telefone: FieldRef<"tbl_cadastro", 'BigInt'>
    readonly cpf: FieldRef<"tbl_cadastro", 'BigInt'>
    readonly rg: FieldRef<"tbl_cadastro", 'BigInt'>
  }
    

  // Custom InputTypes
  /**
   * tbl_cadastro findUnique
   */
  export type tbl_cadastroFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_cadastro
     */
    select?: tbl_cadastroSelect<ExtArgs> | null
    /**
     * Filter, which tbl_cadastro to fetch.
     */
    where: tbl_cadastroWhereUniqueInput
  }

  /**
   * tbl_cadastro findUniqueOrThrow
   */
  export type tbl_cadastroFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_cadastro
     */
    select?: tbl_cadastroSelect<ExtArgs> | null
    /**
     * Filter, which tbl_cadastro to fetch.
     */
    where: tbl_cadastroWhereUniqueInput
  }

  /**
   * tbl_cadastro findFirst
   */
  export type tbl_cadastroFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_cadastro
     */
    select?: tbl_cadastroSelect<ExtArgs> | null
    /**
     * Filter, which tbl_cadastro to fetch.
     */
    where?: tbl_cadastroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_cadastros to fetch.
     */
    orderBy?: tbl_cadastroOrderByWithRelationInput | tbl_cadastroOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_cadastros.
     */
    cursor?: tbl_cadastroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_cadastros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_cadastros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_cadastros.
     */
    distinct?: Tbl_cadastroScalarFieldEnum | Tbl_cadastroScalarFieldEnum[]
  }

  /**
   * tbl_cadastro findFirstOrThrow
   */
  export type tbl_cadastroFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_cadastro
     */
    select?: tbl_cadastroSelect<ExtArgs> | null
    /**
     * Filter, which tbl_cadastro to fetch.
     */
    where?: tbl_cadastroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_cadastros to fetch.
     */
    orderBy?: tbl_cadastroOrderByWithRelationInput | tbl_cadastroOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_cadastros.
     */
    cursor?: tbl_cadastroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_cadastros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_cadastros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_cadastros.
     */
    distinct?: Tbl_cadastroScalarFieldEnum | Tbl_cadastroScalarFieldEnum[]
  }

  /**
   * tbl_cadastro findMany
   */
  export type tbl_cadastroFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_cadastro
     */
    select?: tbl_cadastroSelect<ExtArgs> | null
    /**
     * Filter, which tbl_cadastros to fetch.
     */
    where?: tbl_cadastroWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_cadastros to fetch.
     */
    orderBy?: tbl_cadastroOrderByWithRelationInput | tbl_cadastroOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_cadastros.
     */
    cursor?: tbl_cadastroWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_cadastros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_cadastros.
     */
    skip?: number
    distinct?: Tbl_cadastroScalarFieldEnum | Tbl_cadastroScalarFieldEnum[]
  }

  /**
   * tbl_cadastro create
   */
  export type tbl_cadastroCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_cadastro
     */
    select?: tbl_cadastroSelect<ExtArgs> | null
    /**
     * The data needed to create a tbl_cadastro.
     */
    data: XOR<tbl_cadastroCreateInput, tbl_cadastroUncheckedCreateInput>
  }

  /**
   * tbl_cadastro createMany
   */
  export type tbl_cadastroCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_cadastros.
     */
    data: tbl_cadastroCreateManyInput | tbl_cadastroCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tbl_cadastro update
   */
  export type tbl_cadastroUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_cadastro
     */
    select?: tbl_cadastroSelect<ExtArgs> | null
    /**
     * The data needed to update a tbl_cadastro.
     */
    data: XOR<tbl_cadastroUpdateInput, tbl_cadastroUncheckedUpdateInput>
    /**
     * Choose, which tbl_cadastro to update.
     */
    where: tbl_cadastroWhereUniqueInput
  }

  /**
   * tbl_cadastro updateMany
   */
  export type tbl_cadastroUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_cadastros.
     */
    data: XOR<tbl_cadastroUpdateManyMutationInput, tbl_cadastroUncheckedUpdateManyInput>
    /**
     * Filter which tbl_cadastros to update
     */
    where?: tbl_cadastroWhereInput
  }

  /**
   * tbl_cadastro upsert
   */
  export type tbl_cadastroUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_cadastro
     */
    select?: tbl_cadastroSelect<ExtArgs> | null
    /**
     * The filter to search for the tbl_cadastro to update in case it exists.
     */
    where: tbl_cadastroWhereUniqueInput
    /**
     * In case the tbl_cadastro found by the `where` argument doesn't exist, create a new tbl_cadastro with this data.
     */
    create: XOR<tbl_cadastroCreateInput, tbl_cadastroUncheckedCreateInput>
    /**
     * In case the tbl_cadastro was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_cadastroUpdateInput, tbl_cadastroUncheckedUpdateInput>
  }

  /**
   * tbl_cadastro delete
   */
  export type tbl_cadastroDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_cadastro
     */
    select?: tbl_cadastroSelect<ExtArgs> | null
    /**
     * Filter which tbl_cadastro to delete.
     */
    where: tbl_cadastroWhereUniqueInput
  }

  /**
   * tbl_cadastro deleteMany
   */
  export type tbl_cadastroDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_cadastros to delete
     */
    where?: tbl_cadastroWhereInput
  }

  /**
   * tbl_cadastro without action
   */
  export type tbl_cadastroDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_cadastro
     */
    select?: tbl_cadastroSelect<ExtArgs> | null
  }


  /**
   * Model tbl_formulario_adocao
   */

  export type AggregateTbl_formulario_adocao = {
    _count: Tbl_formulario_adocaoCountAggregateOutputType | null
    _avg: Tbl_formulario_adocaoAvgAggregateOutputType | null
    _sum: Tbl_formulario_adocaoSumAggregateOutputType | null
    _min: Tbl_formulario_adocaoMinAggregateOutputType | null
    _max: Tbl_formulario_adocaoMaxAggregateOutputType | null
  }

  export type Tbl_formulario_adocaoAvgAggregateOutputType = {
    id: number | null
    idade_minima: number | null
  }

  export type Tbl_formulario_adocaoSumAggregateOutputType = {
    id: number | null
    idade_minima: number | null
  }

  export type Tbl_formulario_adocaoMinAggregateOutputType = {
    id: number | null
    raca_de_preferencia: string | null
    porte: string | null
    idade_minima: number | null
    resgatado_ou_nao: string | null
  }

  export type Tbl_formulario_adocaoMaxAggregateOutputType = {
    id: number | null
    raca_de_preferencia: string | null
    porte: string | null
    idade_minima: number | null
    resgatado_ou_nao: string | null
  }

  export type Tbl_formulario_adocaoCountAggregateOutputType = {
    id: number
    raca_de_preferencia: number
    porte: number
    idade_minima: number
    resgatado_ou_nao: number
    _all: number
  }


  export type Tbl_formulario_adocaoAvgAggregateInputType = {
    id?: true
    idade_minima?: true
  }

  export type Tbl_formulario_adocaoSumAggregateInputType = {
    id?: true
    idade_minima?: true
  }

  export type Tbl_formulario_adocaoMinAggregateInputType = {
    id?: true
    raca_de_preferencia?: true
    porte?: true
    idade_minima?: true
    resgatado_ou_nao?: true
  }

  export type Tbl_formulario_adocaoMaxAggregateInputType = {
    id?: true
    raca_de_preferencia?: true
    porte?: true
    idade_minima?: true
    resgatado_ou_nao?: true
  }

  export type Tbl_formulario_adocaoCountAggregateInputType = {
    id?: true
    raca_de_preferencia?: true
    porte?: true
    idade_minima?: true
    resgatado_ou_nao?: true
    _all?: true
  }

  export type Tbl_formulario_adocaoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_formulario_adocao to aggregate.
     */
    where?: tbl_formulario_adocaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_formulario_adocaos to fetch.
     */
    orderBy?: tbl_formulario_adocaoOrderByWithRelationInput | tbl_formulario_adocaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_formulario_adocaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_formulario_adocaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_formulario_adocaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_formulario_adocaos
    **/
    _count?: true | Tbl_formulario_adocaoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_formulario_adocaoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_formulario_adocaoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_formulario_adocaoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_formulario_adocaoMaxAggregateInputType
  }

  export type GetTbl_formulario_adocaoAggregateType<T extends Tbl_formulario_adocaoAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_formulario_adocao]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_formulario_adocao[P]>
      : GetScalarType<T[P], AggregateTbl_formulario_adocao[P]>
  }




  export type tbl_formulario_adocaoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_formulario_adocaoWhereInput
    orderBy?: tbl_formulario_adocaoOrderByWithAggregationInput | tbl_formulario_adocaoOrderByWithAggregationInput[]
    by: Tbl_formulario_adocaoScalarFieldEnum[] | Tbl_formulario_adocaoScalarFieldEnum
    having?: tbl_formulario_adocaoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_formulario_adocaoCountAggregateInputType | true
    _avg?: Tbl_formulario_adocaoAvgAggregateInputType
    _sum?: Tbl_formulario_adocaoSumAggregateInputType
    _min?: Tbl_formulario_adocaoMinAggregateInputType
    _max?: Tbl_formulario_adocaoMaxAggregateInputType
  }

  export type Tbl_formulario_adocaoGroupByOutputType = {
    id: number
    raca_de_preferencia: string
    porte: string | null
    idade_minima: number
    resgatado_ou_nao: string | null
    _count: Tbl_formulario_adocaoCountAggregateOutputType | null
    _avg: Tbl_formulario_adocaoAvgAggregateOutputType | null
    _sum: Tbl_formulario_adocaoSumAggregateOutputType | null
    _min: Tbl_formulario_adocaoMinAggregateOutputType | null
    _max: Tbl_formulario_adocaoMaxAggregateOutputType | null
  }

  type GetTbl_formulario_adocaoGroupByPayload<T extends tbl_formulario_adocaoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_formulario_adocaoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_formulario_adocaoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_formulario_adocaoGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_formulario_adocaoGroupByOutputType[P]>
        }
      >
    >


  export type tbl_formulario_adocaoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    raca_de_preferencia?: boolean
    porte?: boolean
    idade_minima?: boolean
    resgatado_ou_nao?: boolean
  }, ExtArgs["result"]["tbl_formulario_adocao"]>

  export type tbl_formulario_adocaoSelectScalar = {
    id?: boolean
    raca_de_preferencia?: boolean
    porte?: boolean
    idade_minima?: boolean
    resgatado_ou_nao?: boolean
  }



  export type $tbl_formulario_adocaoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_formulario_adocao"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      raca_de_preferencia: string
      porte: string | null
      idade_minima: number
      resgatado_ou_nao: string | null
    }, ExtArgs["result"]["tbl_formulario_adocao"]>
    composites: {}
  }


  type tbl_formulario_adocaoGetPayload<S extends boolean | null | undefined | tbl_formulario_adocaoDefaultArgs> = $Result.GetResult<Prisma.$tbl_formulario_adocaoPayload, S>

  type tbl_formulario_adocaoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<tbl_formulario_adocaoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Tbl_formulario_adocaoCountAggregateInputType | true
    }

  export interface tbl_formulario_adocaoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_formulario_adocao'], meta: { name: 'tbl_formulario_adocao' } }
    /**
     * Find zero or one Tbl_formulario_adocao that matches the filter.
     * @param {tbl_formulario_adocaoFindUniqueArgs} args - Arguments to find a Tbl_formulario_adocao
     * @example
     * // Get one Tbl_formulario_adocao
     * const tbl_formulario_adocao = await prisma.tbl_formulario_adocao.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends tbl_formulario_adocaoFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_formulario_adocaoFindUniqueArgs<ExtArgs>>
    ): Prisma__tbl_formulario_adocaoClient<$Result.GetResult<Prisma.$tbl_formulario_adocaoPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Tbl_formulario_adocao that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {tbl_formulario_adocaoFindUniqueOrThrowArgs} args - Arguments to find a Tbl_formulario_adocao
     * @example
     * // Get one Tbl_formulario_adocao
     * const tbl_formulario_adocao = await prisma.tbl_formulario_adocao.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends tbl_formulario_adocaoFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_formulario_adocaoFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__tbl_formulario_adocaoClient<$Result.GetResult<Prisma.$tbl_formulario_adocaoPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Tbl_formulario_adocao that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_formulario_adocaoFindFirstArgs} args - Arguments to find a Tbl_formulario_adocao
     * @example
     * // Get one Tbl_formulario_adocao
     * const tbl_formulario_adocao = await prisma.tbl_formulario_adocao.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends tbl_formulario_adocaoFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_formulario_adocaoFindFirstArgs<ExtArgs>>
    ): Prisma__tbl_formulario_adocaoClient<$Result.GetResult<Prisma.$tbl_formulario_adocaoPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Tbl_formulario_adocao that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_formulario_adocaoFindFirstOrThrowArgs} args - Arguments to find a Tbl_formulario_adocao
     * @example
     * // Get one Tbl_formulario_adocao
     * const tbl_formulario_adocao = await prisma.tbl_formulario_adocao.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends tbl_formulario_adocaoFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_formulario_adocaoFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__tbl_formulario_adocaoClient<$Result.GetResult<Prisma.$tbl_formulario_adocaoPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Tbl_formulario_adocaos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_formulario_adocaoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_formulario_adocaos
     * const tbl_formulario_adocaos = await prisma.tbl_formulario_adocao.findMany()
     * 
     * // Get first 10 Tbl_formulario_adocaos
     * const tbl_formulario_adocaos = await prisma.tbl_formulario_adocao.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbl_formulario_adocaoWithIdOnly = await prisma.tbl_formulario_adocao.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends tbl_formulario_adocaoFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_formulario_adocaoFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_formulario_adocaoPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Tbl_formulario_adocao.
     * @param {tbl_formulario_adocaoCreateArgs} args - Arguments to create a Tbl_formulario_adocao.
     * @example
     * // Create one Tbl_formulario_adocao
     * const Tbl_formulario_adocao = await prisma.tbl_formulario_adocao.create({
     *   data: {
     *     // ... data to create a Tbl_formulario_adocao
     *   }
     * })
     * 
    **/
    create<T extends tbl_formulario_adocaoCreateArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_formulario_adocaoCreateArgs<ExtArgs>>
    ): Prisma__tbl_formulario_adocaoClient<$Result.GetResult<Prisma.$tbl_formulario_adocaoPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Tbl_formulario_adocaos.
     * @param {tbl_formulario_adocaoCreateManyArgs} args - Arguments to create many Tbl_formulario_adocaos.
     * @example
     * // Create many Tbl_formulario_adocaos
     * const tbl_formulario_adocao = await prisma.tbl_formulario_adocao.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends tbl_formulario_adocaoCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_formulario_adocaoCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbl_formulario_adocao.
     * @param {tbl_formulario_adocaoDeleteArgs} args - Arguments to delete one Tbl_formulario_adocao.
     * @example
     * // Delete one Tbl_formulario_adocao
     * const Tbl_formulario_adocao = await prisma.tbl_formulario_adocao.delete({
     *   where: {
     *     // ... filter to delete one Tbl_formulario_adocao
     *   }
     * })
     * 
    **/
    delete<T extends tbl_formulario_adocaoDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_formulario_adocaoDeleteArgs<ExtArgs>>
    ): Prisma__tbl_formulario_adocaoClient<$Result.GetResult<Prisma.$tbl_formulario_adocaoPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Tbl_formulario_adocao.
     * @param {tbl_formulario_adocaoUpdateArgs} args - Arguments to update one Tbl_formulario_adocao.
     * @example
     * // Update one Tbl_formulario_adocao
     * const tbl_formulario_adocao = await prisma.tbl_formulario_adocao.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends tbl_formulario_adocaoUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_formulario_adocaoUpdateArgs<ExtArgs>>
    ): Prisma__tbl_formulario_adocaoClient<$Result.GetResult<Prisma.$tbl_formulario_adocaoPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Tbl_formulario_adocaos.
     * @param {tbl_formulario_adocaoDeleteManyArgs} args - Arguments to filter Tbl_formulario_adocaos to delete.
     * @example
     * // Delete a few Tbl_formulario_adocaos
     * const { count } = await prisma.tbl_formulario_adocao.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends tbl_formulario_adocaoDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tbl_formulario_adocaoDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_formulario_adocaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_formulario_adocaoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_formulario_adocaos
     * const tbl_formulario_adocao = await prisma.tbl_formulario_adocao.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends tbl_formulario_adocaoUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_formulario_adocaoUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_formulario_adocao.
     * @param {tbl_formulario_adocaoUpsertArgs} args - Arguments to update or create a Tbl_formulario_adocao.
     * @example
     * // Update or create a Tbl_formulario_adocao
     * const tbl_formulario_adocao = await prisma.tbl_formulario_adocao.upsert({
     *   create: {
     *     // ... data to create a Tbl_formulario_adocao
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_formulario_adocao we want to update
     *   }
     * })
    **/
    upsert<T extends tbl_formulario_adocaoUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, tbl_formulario_adocaoUpsertArgs<ExtArgs>>
    ): Prisma__tbl_formulario_adocaoClient<$Result.GetResult<Prisma.$tbl_formulario_adocaoPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Tbl_formulario_adocaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_formulario_adocaoCountArgs} args - Arguments to filter Tbl_formulario_adocaos to count.
     * @example
     * // Count the number of Tbl_formulario_adocaos
     * const count = await prisma.tbl_formulario_adocao.count({
     *   where: {
     *     // ... the filter for the Tbl_formulario_adocaos we want to count
     *   }
     * })
    **/
    count<T extends tbl_formulario_adocaoCountArgs>(
      args?: Subset<T, tbl_formulario_adocaoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_formulario_adocaoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_formulario_adocao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_formulario_adocaoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_formulario_adocaoAggregateArgs>(args: Subset<T, Tbl_formulario_adocaoAggregateArgs>): Prisma.PrismaPromise<GetTbl_formulario_adocaoAggregateType<T>>

    /**
     * Group by Tbl_formulario_adocao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_formulario_adocaoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_formulario_adocaoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_formulario_adocaoGroupByArgs['orderBy'] }
        : { orderBy?: tbl_formulario_adocaoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_formulario_adocaoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_formulario_adocaoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_formulario_adocao model
   */
  readonly fields: tbl_formulario_adocaoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_formulario_adocao.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_formulario_adocaoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';


    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the tbl_formulario_adocao model
   */ 
  interface tbl_formulario_adocaoFieldRefs {
    readonly id: FieldRef<"tbl_formulario_adocao", 'Int'>
    readonly raca_de_preferencia: FieldRef<"tbl_formulario_adocao", 'String'>
    readonly porte: FieldRef<"tbl_formulario_adocao", 'String'>
    readonly idade_minima: FieldRef<"tbl_formulario_adocao", 'Int'>
    readonly resgatado_ou_nao: FieldRef<"tbl_formulario_adocao", 'String'>
  }
    

  // Custom InputTypes
  /**
   * tbl_formulario_adocao findUnique
   */
  export type tbl_formulario_adocaoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_formulario_adocao
     */
    select?: tbl_formulario_adocaoSelect<ExtArgs> | null
    /**
     * Filter, which tbl_formulario_adocao to fetch.
     */
    where: tbl_formulario_adocaoWhereUniqueInput
  }

  /**
   * tbl_formulario_adocao findUniqueOrThrow
   */
  export type tbl_formulario_adocaoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_formulario_adocao
     */
    select?: tbl_formulario_adocaoSelect<ExtArgs> | null
    /**
     * Filter, which tbl_formulario_adocao to fetch.
     */
    where: tbl_formulario_adocaoWhereUniqueInput
  }

  /**
   * tbl_formulario_adocao findFirst
   */
  export type tbl_formulario_adocaoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_formulario_adocao
     */
    select?: tbl_formulario_adocaoSelect<ExtArgs> | null
    /**
     * Filter, which tbl_formulario_adocao to fetch.
     */
    where?: tbl_formulario_adocaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_formulario_adocaos to fetch.
     */
    orderBy?: tbl_formulario_adocaoOrderByWithRelationInput | tbl_formulario_adocaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_formulario_adocaos.
     */
    cursor?: tbl_formulario_adocaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_formulario_adocaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_formulario_adocaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_formulario_adocaos.
     */
    distinct?: Tbl_formulario_adocaoScalarFieldEnum | Tbl_formulario_adocaoScalarFieldEnum[]
  }

  /**
   * tbl_formulario_adocao findFirstOrThrow
   */
  export type tbl_formulario_adocaoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_formulario_adocao
     */
    select?: tbl_formulario_adocaoSelect<ExtArgs> | null
    /**
     * Filter, which tbl_formulario_adocao to fetch.
     */
    where?: tbl_formulario_adocaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_formulario_adocaos to fetch.
     */
    orderBy?: tbl_formulario_adocaoOrderByWithRelationInput | tbl_formulario_adocaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_formulario_adocaos.
     */
    cursor?: tbl_formulario_adocaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_formulario_adocaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_formulario_adocaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_formulario_adocaos.
     */
    distinct?: Tbl_formulario_adocaoScalarFieldEnum | Tbl_formulario_adocaoScalarFieldEnum[]
  }

  /**
   * tbl_formulario_adocao findMany
   */
  export type tbl_formulario_adocaoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_formulario_adocao
     */
    select?: tbl_formulario_adocaoSelect<ExtArgs> | null
    /**
     * Filter, which tbl_formulario_adocaos to fetch.
     */
    where?: tbl_formulario_adocaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_formulario_adocaos to fetch.
     */
    orderBy?: tbl_formulario_adocaoOrderByWithRelationInput | tbl_formulario_adocaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_formulario_adocaos.
     */
    cursor?: tbl_formulario_adocaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_formulario_adocaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_formulario_adocaos.
     */
    skip?: number
    distinct?: Tbl_formulario_adocaoScalarFieldEnum | Tbl_formulario_adocaoScalarFieldEnum[]
  }

  /**
   * tbl_formulario_adocao create
   */
  export type tbl_formulario_adocaoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_formulario_adocao
     */
    select?: tbl_formulario_adocaoSelect<ExtArgs> | null
    /**
     * The data needed to create a tbl_formulario_adocao.
     */
    data: XOR<tbl_formulario_adocaoCreateInput, tbl_formulario_adocaoUncheckedCreateInput>
  }

  /**
   * tbl_formulario_adocao createMany
   */
  export type tbl_formulario_adocaoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_formulario_adocaos.
     */
    data: tbl_formulario_adocaoCreateManyInput | tbl_formulario_adocaoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tbl_formulario_adocao update
   */
  export type tbl_formulario_adocaoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_formulario_adocao
     */
    select?: tbl_formulario_adocaoSelect<ExtArgs> | null
    /**
     * The data needed to update a tbl_formulario_adocao.
     */
    data: XOR<tbl_formulario_adocaoUpdateInput, tbl_formulario_adocaoUncheckedUpdateInput>
    /**
     * Choose, which tbl_formulario_adocao to update.
     */
    where: tbl_formulario_adocaoWhereUniqueInput
  }

  /**
   * tbl_formulario_adocao updateMany
   */
  export type tbl_formulario_adocaoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_formulario_adocaos.
     */
    data: XOR<tbl_formulario_adocaoUpdateManyMutationInput, tbl_formulario_adocaoUncheckedUpdateManyInput>
    /**
     * Filter which tbl_formulario_adocaos to update
     */
    where?: tbl_formulario_adocaoWhereInput
  }

  /**
   * tbl_formulario_adocao upsert
   */
  export type tbl_formulario_adocaoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_formulario_adocao
     */
    select?: tbl_formulario_adocaoSelect<ExtArgs> | null
    /**
     * The filter to search for the tbl_formulario_adocao to update in case it exists.
     */
    where: tbl_formulario_adocaoWhereUniqueInput
    /**
     * In case the tbl_formulario_adocao found by the `where` argument doesn't exist, create a new tbl_formulario_adocao with this data.
     */
    create: XOR<tbl_formulario_adocaoCreateInput, tbl_formulario_adocaoUncheckedCreateInput>
    /**
     * In case the tbl_formulario_adocao was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_formulario_adocaoUpdateInput, tbl_formulario_adocaoUncheckedUpdateInput>
  }

  /**
   * tbl_formulario_adocao delete
   */
  export type tbl_formulario_adocaoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_formulario_adocao
     */
    select?: tbl_formulario_adocaoSelect<ExtArgs> | null
    /**
     * Filter which tbl_formulario_adocao to delete.
     */
    where: tbl_formulario_adocaoWhereUniqueInput
  }

  /**
   * tbl_formulario_adocao deleteMany
   */
  export type tbl_formulario_adocaoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_formulario_adocaos to delete
     */
    where?: tbl_formulario_adocaoWhereInput
  }

  /**
   * tbl_formulario_adocao without action
   */
  export type tbl_formulario_adocaoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_formulario_adocao
     */
    select?: tbl_formulario_adocaoSelect<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const Tbl_animaisScalarFieldEnum: {
    id: 'id',
    nome: 'nome',
    raca: 'raca',
    idade: 'idade',
    setor: 'setor'
  };

  export type Tbl_animaisScalarFieldEnum = (typeof Tbl_animaisScalarFieldEnum)[keyof typeof Tbl_animaisScalarFieldEnum]


  export const Tbl_cadastroScalarFieldEnum: {
    id: 'id',
    nome: 'nome',
    email: 'email',
    endereco: 'endereco',
    telefone: 'telefone',
    cpf: 'cpf',
    rg: 'rg'
  };

  export type Tbl_cadastroScalarFieldEnum = (typeof Tbl_cadastroScalarFieldEnum)[keyof typeof Tbl_cadastroScalarFieldEnum]


  export const Tbl_formulario_adocaoScalarFieldEnum: {
    id: 'id',
    raca_de_preferencia: 'raca_de_preferencia',
    porte: 'porte',
    idade_minima: 'idade_minima',
    resgatado_ou_nao: 'resgatado_ou_nao'
  };

  export type Tbl_formulario_adocaoScalarFieldEnum = (typeof Tbl_formulario_adocaoScalarFieldEnum)[keyof typeof Tbl_formulario_adocaoScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'BigInt'
   */
  export type BigIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BigInt'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    
  /**
   * Deep Input Types
   */


  export type tbl_animaisWhereInput = {
    AND?: tbl_animaisWhereInput | tbl_animaisWhereInput[]
    OR?: tbl_animaisWhereInput[]
    NOT?: tbl_animaisWhereInput | tbl_animaisWhereInput[]
    id?: IntFilter<"tbl_animais"> | number
    nome?: StringNullableFilter<"tbl_animais"> | string | null
    raca?: StringFilter<"tbl_animais"> | string
    idade?: IntNullableFilter<"tbl_animais"> | number | null
    setor?: StringFilter<"tbl_animais"> | string
  }

  export type tbl_animaisOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrderInput | SortOrder
    raca?: SortOrder
    idade?: SortOrderInput | SortOrder
    setor?: SortOrder
  }

  export type tbl_animaisWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: tbl_animaisWhereInput | tbl_animaisWhereInput[]
    OR?: tbl_animaisWhereInput[]
    NOT?: tbl_animaisWhereInput | tbl_animaisWhereInput[]
    nome?: StringNullableFilter<"tbl_animais"> | string | null
    raca?: StringFilter<"tbl_animais"> | string
    idade?: IntNullableFilter<"tbl_animais"> | number | null
    setor?: StringFilter<"tbl_animais"> | string
  }, "id">

  export type tbl_animaisOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrderInput | SortOrder
    raca?: SortOrder
    idade?: SortOrderInput | SortOrder
    setor?: SortOrder
    _count?: tbl_animaisCountOrderByAggregateInput
    _avg?: tbl_animaisAvgOrderByAggregateInput
    _max?: tbl_animaisMaxOrderByAggregateInput
    _min?: tbl_animaisMinOrderByAggregateInput
    _sum?: tbl_animaisSumOrderByAggregateInput
  }

  export type tbl_animaisScalarWhereWithAggregatesInput = {
    AND?: tbl_animaisScalarWhereWithAggregatesInput | tbl_animaisScalarWhereWithAggregatesInput[]
    OR?: tbl_animaisScalarWhereWithAggregatesInput[]
    NOT?: tbl_animaisScalarWhereWithAggregatesInput | tbl_animaisScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"tbl_animais"> | number
    nome?: StringNullableWithAggregatesFilter<"tbl_animais"> | string | null
    raca?: StringWithAggregatesFilter<"tbl_animais"> | string
    idade?: IntNullableWithAggregatesFilter<"tbl_animais"> | number | null
    setor?: StringWithAggregatesFilter<"tbl_animais"> | string
  }

  export type tbl_cadastroWhereInput = {
    AND?: tbl_cadastroWhereInput | tbl_cadastroWhereInput[]
    OR?: tbl_cadastroWhereInput[]
    NOT?: tbl_cadastroWhereInput | tbl_cadastroWhereInput[]
    id?: IntFilter<"tbl_cadastro"> | number
    nome?: StringFilter<"tbl_cadastro"> | string
    email?: StringNullableFilter<"tbl_cadastro"> | string | null
    endereco?: StringFilter<"tbl_cadastro"> | string
    telefone?: BigIntFilter<"tbl_cadastro"> | bigint | number
    cpf?: BigIntFilter<"tbl_cadastro"> | bigint | number
    rg?: BigIntFilter<"tbl_cadastro"> | bigint | number
  }

  export type tbl_cadastroOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    email?: SortOrderInput | SortOrder
    endereco?: SortOrder
    telefone?: SortOrder
    cpf?: SortOrder
    rg?: SortOrder
  }

  export type tbl_cadastroWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: tbl_cadastroWhereInput | tbl_cadastroWhereInput[]
    OR?: tbl_cadastroWhereInput[]
    NOT?: tbl_cadastroWhereInput | tbl_cadastroWhereInput[]
    nome?: StringFilter<"tbl_cadastro"> | string
    email?: StringNullableFilter<"tbl_cadastro"> | string | null
    endereco?: StringFilter<"tbl_cadastro"> | string
    telefone?: BigIntFilter<"tbl_cadastro"> | bigint | number
    cpf?: BigIntFilter<"tbl_cadastro"> | bigint | number
    rg?: BigIntFilter<"tbl_cadastro"> | bigint | number
  }, "id">

  export type tbl_cadastroOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    email?: SortOrderInput | SortOrder
    endereco?: SortOrder
    telefone?: SortOrder
    cpf?: SortOrder
    rg?: SortOrder
    _count?: tbl_cadastroCountOrderByAggregateInput
    _avg?: tbl_cadastroAvgOrderByAggregateInput
    _max?: tbl_cadastroMaxOrderByAggregateInput
    _min?: tbl_cadastroMinOrderByAggregateInput
    _sum?: tbl_cadastroSumOrderByAggregateInput
  }

  export type tbl_cadastroScalarWhereWithAggregatesInput = {
    AND?: tbl_cadastroScalarWhereWithAggregatesInput | tbl_cadastroScalarWhereWithAggregatesInput[]
    OR?: tbl_cadastroScalarWhereWithAggregatesInput[]
    NOT?: tbl_cadastroScalarWhereWithAggregatesInput | tbl_cadastroScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"tbl_cadastro"> | number
    nome?: StringWithAggregatesFilter<"tbl_cadastro"> | string
    email?: StringNullableWithAggregatesFilter<"tbl_cadastro"> | string | null
    endereco?: StringWithAggregatesFilter<"tbl_cadastro"> | string
    telefone?: BigIntWithAggregatesFilter<"tbl_cadastro"> | bigint | number
    cpf?: BigIntWithAggregatesFilter<"tbl_cadastro"> | bigint | number
    rg?: BigIntWithAggregatesFilter<"tbl_cadastro"> | bigint | number
  }

  export type tbl_formulario_adocaoWhereInput = {
    AND?: tbl_formulario_adocaoWhereInput | tbl_formulario_adocaoWhereInput[]
    OR?: tbl_formulario_adocaoWhereInput[]
    NOT?: tbl_formulario_adocaoWhereInput | tbl_formulario_adocaoWhereInput[]
    id?: IntFilter<"tbl_formulario_adocao"> | number
    raca_de_preferencia?: StringFilter<"tbl_formulario_adocao"> | string
    porte?: StringNullableFilter<"tbl_formulario_adocao"> | string | null
    idade_minima?: IntFilter<"tbl_formulario_adocao"> | number
    resgatado_ou_nao?: StringNullableFilter<"tbl_formulario_adocao"> | string | null
  }

  export type tbl_formulario_adocaoOrderByWithRelationInput = {
    id?: SortOrder
    raca_de_preferencia?: SortOrder
    porte?: SortOrderInput | SortOrder
    idade_minima?: SortOrder
    resgatado_ou_nao?: SortOrderInput | SortOrder
  }

  export type tbl_formulario_adocaoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: tbl_formulario_adocaoWhereInput | tbl_formulario_adocaoWhereInput[]
    OR?: tbl_formulario_adocaoWhereInput[]
    NOT?: tbl_formulario_adocaoWhereInput | tbl_formulario_adocaoWhereInput[]
    raca_de_preferencia?: StringFilter<"tbl_formulario_adocao"> | string
    porte?: StringNullableFilter<"tbl_formulario_adocao"> | string | null
    idade_minima?: IntFilter<"tbl_formulario_adocao"> | number
    resgatado_ou_nao?: StringNullableFilter<"tbl_formulario_adocao"> | string | null
  }, "id">

  export type tbl_formulario_adocaoOrderByWithAggregationInput = {
    id?: SortOrder
    raca_de_preferencia?: SortOrder
    porte?: SortOrderInput | SortOrder
    idade_minima?: SortOrder
    resgatado_ou_nao?: SortOrderInput | SortOrder
    _count?: tbl_formulario_adocaoCountOrderByAggregateInput
    _avg?: tbl_formulario_adocaoAvgOrderByAggregateInput
    _max?: tbl_formulario_adocaoMaxOrderByAggregateInput
    _min?: tbl_formulario_adocaoMinOrderByAggregateInput
    _sum?: tbl_formulario_adocaoSumOrderByAggregateInput
  }

  export type tbl_formulario_adocaoScalarWhereWithAggregatesInput = {
    AND?: tbl_formulario_adocaoScalarWhereWithAggregatesInput | tbl_formulario_adocaoScalarWhereWithAggregatesInput[]
    OR?: tbl_formulario_adocaoScalarWhereWithAggregatesInput[]
    NOT?: tbl_formulario_adocaoScalarWhereWithAggregatesInput | tbl_formulario_adocaoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"tbl_formulario_adocao"> | number
    raca_de_preferencia?: StringWithAggregatesFilter<"tbl_formulario_adocao"> | string
    porte?: StringNullableWithAggregatesFilter<"tbl_formulario_adocao"> | string | null
    idade_minima?: IntWithAggregatesFilter<"tbl_formulario_adocao"> | number
    resgatado_ou_nao?: StringNullableWithAggregatesFilter<"tbl_formulario_adocao"> | string | null
  }

  export type tbl_animaisCreateInput = {
    nome?: string | null
    raca: string
    idade?: number | null
    setor: string
  }

  export type tbl_animaisUncheckedCreateInput = {
    id?: number
    nome?: string | null
    raca: string
    idade?: number | null
    setor: string
  }

  export type tbl_animaisUpdateInput = {
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    raca?: StringFieldUpdateOperationsInput | string
    idade?: NullableIntFieldUpdateOperationsInput | number | null
    setor?: StringFieldUpdateOperationsInput | string
  }

  export type tbl_animaisUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    raca?: StringFieldUpdateOperationsInput | string
    idade?: NullableIntFieldUpdateOperationsInput | number | null
    setor?: StringFieldUpdateOperationsInput | string
  }

  export type tbl_animaisCreateManyInput = {
    id?: number
    nome?: string | null
    raca: string
    idade?: number | null
    setor: string
  }

  export type tbl_animaisUpdateManyMutationInput = {
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    raca?: StringFieldUpdateOperationsInput | string
    idade?: NullableIntFieldUpdateOperationsInput | number | null
    setor?: StringFieldUpdateOperationsInput | string
  }

  export type tbl_animaisUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: NullableStringFieldUpdateOperationsInput | string | null
    raca?: StringFieldUpdateOperationsInput | string
    idade?: NullableIntFieldUpdateOperationsInput | number | null
    setor?: StringFieldUpdateOperationsInput | string
  }

  export type tbl_cadastroCreateInput = {
    nome: string
    email?: string | null
    endereco: string
    telefone: bigint | number
    cpf: bigint | number
    rg: bigint | number
  }

  export type tbl_cadastroUncheckedCreateInput = {
    id?: number
    nome: string
    email?: string | null
    endereco: string
    telefone: bigint | number
    cpf: bigint | number
    rg: bigint | number
  }

  export type tbl_cadastroUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    endereco?: StringFieldUpdateOperationsInput | string
    telefone?: BigIntFieldUpdateOperationsInput | bigint | number
    cpf?: BigIntFieldUpdateOperationsInput | bigint | number
    rg?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type tbl_cadastroUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    endereco?: StringFieldUpdateOperationsInput | string
    telefone?: BigIntFieldUpdateOperationsInput | bigint | number
    cpf?: BigIntFieldUpdateOperationsInput | bigint | number
    rg?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type tbl_cadastroCreateManyInput = {
    id?: number
    nome: string
    email?: string | null
    endereco: string
    telefone: bigint | number
    cpf: bigint | number
    rg: bigint | number
  }

  export type tbl_cadastroUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    endereco?: StringFieldUpdateOperationsInput | string
    telefone?: BigIntFieldUpdateOperationsInput | bigint | number
    cpf?: BigIntFieldUpdateOperationsInput | bigint | number
    rg?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type tbl_cadastroUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    endereco?: StringFieldUpdateOperationsInput | string
    telefone?: BigIntFieldUpdateOperationsInput | bigint | number
    cpf?: BigIntFieldUpdateOperationsInput | bigint | number
    rg?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type tbl_formulario_adocaoCreateInput = {
    raca_de_preferencia: string
    porte?: string | null
    idade_minima: number
    resgatado_ou_nao?: string | null
  }

  export type tbl_formulario_adocaoUncheckedCreateInput = {
    id?: number
    raca_de_preferencia: string
    porte?: string | null
    idade_minima: number
    resgatado_ou_nao?: string | null
  }

  export type tbl_formulario_adocaoUpdateInput = {
    raca_de_preferencia?: StringFieldUpdateOperationsInput | string
    porte?: NullableStringFieldUpdateOperationsInput | string | null
    idade_minima?: IntFieldUpdateOperationsInput | number
    resgatado_ou_nao?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tbl_formulario_adocaoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    raca_de_preferencia?: StringFieldUpdateOperationsInput | string
    porte?: NullableStringFieldUpdateOperationsInput | string | null
    idade_minima?: IntFieldUpdateOperationsInput | number
    resgatado_ou_nao?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tbl_formulario_adocaoCreateManyInput = {
    id?: number
    raca_de_preferencia: string
    porte?: string | null
    idade_minima: number
    resgatado_ou_nao?: string | null
  }

  export type tbl_formulario_adocaoUpdateManyMutationInput = {
    raca_de_preferencia?: StringFieldUpdateOperationsInput | string
    porte?: NullableStringFieldUpdateOperationsInput | string | null
    idade_minima?: IntFieldUpdateOperationsInput | number
    resgatado_ou_nao?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tbl_formulario_adocaoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    raca_de_preferencia?: StringFieldUpdateOperationsInput | string
    porte?: NullableStringFieldUpdateOperationsInput | string | null
    idade_minima?: IntFieldUpdateOperationsInput | number
    resgatado_ou_nao?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type tbl_animaisCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    raca?: SortOrder
    idade?: SortOrder
    setor?: SortOrder
  }

  export type tbl_animaisAvgOrderByAggregateInput = {
    id?: SortOrder
    idade?: SortOrder
  }

  export type tbl_animaisMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    raca?: SortOrder
    idade?: SortOrder
    setor?: SortOrder
  }

  export type tbl_animaisMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    raca?: SortOrder
    idade?: SortOrder
    setor?: SortOrder
  }

  export type tbl_animaisSumOrderByAggregateInput = {
    id?: SortOrder
    idade?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type BigIntFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[]
    notIn?: bigint[] | number[]
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntFilter<$PrismaModel> | bigint | number
  }

  export type tbl_cadastroCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    endereco?: SortOrder
    telefone?: SortOrder
    cpf?: SortOrder
    rg?: SortOrder
  }

  export type tbl_cadastroAvgOrderByAggregateInput = {
    id?: SortOrder
    telefone?: SortOrder
    cpf?: SortOrder
    rg?: SortOrder
  }

  export type tbl_cadastroMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    endereco?: SortOrder
    telefone?: SortOrder
    cpf?: SortOrder
    rg?: SortOrder
  }

  export type tbl_cadastroMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    email?: SortOrder
    endereco?: SortOrder
    telefone?: SortOrder
    cpf?: SortOrder
    rg?: SortOrder
  }

  export type tbl_cadastroSumOrderByAggregateInput = {
    id?: SortOrder
    telefone?: SortOrder
    cpf?: SortOrder
    rg?: SortOrder
  }

  export type BigIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[]
    notIn?: bigint[] | number[]
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntWithAggregatesFilter<$PrismaModel> | bigint | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedBigIntFilter<$PrismaModel>
    _min?: NestedBigIntFilter<$PrismaModel>
    _max?: NestedBigIntFilter<$PrismaModel>
  }

  export type tbl_formulario_adocaoCountOrderByAggregateInput = {
    id?: SortOrder
    raca_de_preferencia?: SortOrder
    porte?: SortOrder
    idade_minima?: SortOrder
    resgatado_ou_nao?: SortOrder
  }

  export type tbl_formulario_adocaoAvgOrderByAggregateInput = {
    id?: SortOrder
    idade_minima?: SortOrder
  }

  export type tbl_formulario_adocaoMaxOrderByAggregateInput = {
    id?: SortOrder
    raca_de_preferencia?: SortOrder
    porte?: SortOrder
    idade_minima?: SortOrder
    resgatado_ou_nao?: SortOrder
  }

  export type tbl_formulario_adocaoMinOrderByAggregateInput = {
    id?: SortOrder
    raca_de_preferencia?: SortOrder
    porte?: SortOrder
    idade_minima?: SortOrder
    resgatado_ou_nao?: SortOrder
  }

  export type tbl_formulario_adocaoSumOrderByAggregateInput = {
    id?: SortOrder
    idade_minima?: SortOrder
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type BigIntFieldUpdateOperationsInput = {
    set?: bigint | number
    increment?: bigint | number
    decrement?: bigint | number
    multiply?: bigint | number
    divide?: bigint | number
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedBigIntFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[]
    notIn?: bigint[] | number[]
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntFilter<$PrismaModel> | bigint | number
  }

  export type NestedBigIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[]
    notIn?: bigint[] | number[]
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntWithAggregatesFilter<$PrismaModel> | bigint | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedBigIntFilter<$PrismaModel>
    _min?: NestedBigIntFilter<$PrismaModel>
    _max?: NestedBigIntFilter<$PrismaModel>
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use tbl_animaisDefaultArgs instead
     */
    export type tbl_animaisArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = tbl_animaisDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbl_cadastroDefaultArgs instead
     */
    export type tbl_cadastroArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = tbl_cadastroDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbl_formulario_adocaoDefaultArgs instead
     */
    export type tbl_formulario_adocaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = tbl_formulario_adocaoDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}